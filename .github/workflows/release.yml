name: release

on:
  release:
    types: [published]

env:
  # Define image names
  FRONTEND_IMAGE: ghcr.io/jianxuan-li/freeyeti-frontend
  REGISTRY: ghcr.io


jobs:
  config:
    runs-on: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
        
      - name: Check output
        run: |
          echo ${{ github.ref_name }}
          echo ${{ github.ref_name }} > version.txt
          
      - name: Upload version file
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-deployment
          path: version.txt

  build:
    needs: config
    runs-on: [ubuntu-latest]

    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PULL_TK }}

      - name: Check image version
        env:
          IMAGE_TAG: ${{ github.ref_name }}
        run: |
          echo $IMAGE_TAG
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.FRONTEND_IMAGE }}

      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          build-args: |
            api_prefix=/api
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  ## Generate deployment files.
  generate-artifacts:
    # Ensure django image is built before run testing.
    needs: build

    runs-on: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
          
      - name: Check image version
        env:
          IMAGE_TAG: ${{ github.ref_name }}
        run: |
          echo $IMAGE_TAG
      - name: Generate deployment files
        env:
          IMAGE_TAG: ${{ github.ref_name }}
          PULL_SECRET: ${{ secrets.PULL_SECRET }}
        run: |
          sed -i "s@__IMAGE_FRONTEND__@$FRONTEND_IMAGE@g" deployment.yaml
          sed -i "s@__IMAGE_TAG__@$IMAGE_TAG@g" deployment.yaml
          sed -i "s@__PULL_SECRET__@$PULL_SECRET@g" deployment.yaml
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ github.event.repository.name }}-deployment
          path: |
            deployment.yaml

  deploy:
    needs: generate-artifacts

    runs-on: [self-hosted]

    steps:
      - name: download deployment files
        uses: actions/download-artifact@v3
        env:
          IMAGE_TAG: ${{ github.ref_name }}
        with:
          name: ${{ github.event.repository.name }}-deployment
          path: /root/deployment/freeyeti-frontend/${{ github.ref_name }}

      - name: deploy
        working-directory: /root/deployment/freeyeti-frontend/${{ github.ref_name }}
        run: |
          kubectl apply -f deployment.yaml
